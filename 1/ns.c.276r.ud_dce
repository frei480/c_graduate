
;; Function print_conv (print_conv, funcdef_no=40, decl_uid=3195, cgraph_uid=41, symbol_order=40)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 10 n_edges 12 count 13 (  1.3)


print_conv

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 4 [si] 5 [di] 7 [sp] 17 [flags]
;;  ref usage 	r0={4d,1u} r1={4d,1u} r2={3d} r4={4d,2u} r5={4d,2u} r6={1d,9u} r7={1d,11u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,8u} r17={12d,4u} r18={2d} r19={1d,12u} r20={3d} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={3d} r37={3d} r38={2d} r39={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r82={1d,1u} r84={2d,3u} r85={2d,2u} r89={1d,1u} r90={2d,3u} r91={2d,4u} r92={1d,3u} r94={1d} r95={1d,1u} r96={2d,2u} r97={1d,1u} r98={1d,1u} r100={1d,1u} r104={1d,1u} r105={1d,4u} 
;;    total ref usage 265{187d,78u,0e} in 34{32 regular + 2 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166
;;  reg->defs[] map:	0[0,3] 1[4,7] 2[8,10] 4[11,14] 5[15,18] 6[19,19] 7[20,20] 8[21,22] 9[23,24] 10[25,26] 11[27,28] 12[29,30] 13[31,32] 14[33,34] 15[35,36] 16[37,37] 17[38,49] 18[50,51] 19[52,52] 20[53,55] 21[56,58] 22[59,61] 23[62,64] 24[65,67] 25[68,70] 26[71,73] 27[74,76] 28[77,78] 29[79,80] 30[81,82] 31[83,84] 32[85,86] 33[87,88] 34[89,90] 35[91,92] 36[93,95] 37[96,98] 38[99,100] 39[101,102] 44[103,104] 45[105,106] 46[107,108] 47[109,110] 48[111,112] 49[113,114] 50[115,116] 51[117,118] 52[119,120] 53[121,122] 54[123,124] 55[125,126] 56[127,128] 57[129,130] 58[131,132] 59[133,134] 60[135,136] 61[137,138] 62[139,140] 63[141,142] 64[143,144] 65[145,146] 66[147,148] 67[149,150] 68[151,152] 69[153,154] 70[155,156] 71[157,158] 72[159,160] 73[161,162] 74[163,164] 75[165,166] 82[167,167] 84[168,169] 85[170,171] 89[172,172] 90[173,174] 91[175,176] 92[177,177] 94[178,178] 95[179,179] 96[180,181] 97[182,182] 98[183,183] 100[184,184] 104[185,185] 105[186,186] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d3(0){ }d7(1){ }d10(2){ }d14(4){ }d18(5){ }d19(6){ }d20(7){ }d37(16){ }d52(19){ }d55(20){ }d58(21){ }d61(22){ }d64(23){ }d67(24){ }d70(25){ }d73(26){ }d76(27){ }d95(36){ }d98(37){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[3],1[7],2[10],4[14],5[18],6[19],7[20],16[37],19[52],20[55],21[58],22[61],23[64],24[67],25[70],26[73],27[76],36[95],37[98]
;; rd  kill	(53) 0[0,1,2,3],1[4,5,6,7],2[8,9,10],4[11,12,13,14],5[15,16,17,18],6[19],7[20],16[37],19[52],20[53,54,55],21[56,57,58],22[59,60,61],23[62,63,64],24[65,66,67],25[68,69,70],26[71,72,73],27[74,75,76],36[93,94,95],37[96,97,98]
;;  UD chains for artificial uses at top
;; lr  out 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; live  out 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; rd  out 	(6) 4[14],5[18],6[19],7[20],16[37],19[52]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 3 7 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ d19(bb 0 insn -1) }u-1(7){ d20(bb 0 insn -1) }u-1(16){ d37(bb 0 insn -1) }u-1(19){ d52(bb 0 insn -1) }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags] 90 91 92 94 95 96 105
;; live  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; live  gen 	 17 [flags] 90 91 92 94 95 96 105
;; live  kill	 17 [flags]
;; rd  in  	(6) 4[14],5[18],6[19],7[20],16[37],19[52]
;; rd  gen 	(8) 17[49],90[174],91[176],92[177],94[178],95[179],96[180],105[186]
;; rd  kill	(22) 17[38,39,40,41,42,43,44,45,46,47,48,49],90[173,174],91[175,176],92[177],94[178],95[179],96[180,181],105[186]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 90 91 92 105
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 90 91 92 105
;; rd  out 	(8) 6[19],7[20],16[37],19[52],90[174],91[176],92[177],105[186]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d19(bb 0 insn -1) }
;;   reg 7 { d20(bb 0 insn -1) }
;;   reg 16 { d37(bb 0 insn -1) }
;;   reg 19 { d52(bb 0 insn -1) }

( 3 2 )->[3]->( 3 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ d19(bb 0 insn -1) }u-1(7){ d20(bb 0 insn -1) }u-1(16){ d37(bb 0 insn -1) }u-1(19){ d52(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 90 91 92 105
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 90 91 92 105
;; lr  def 	 17 [flags] 82 85 89 90 91 97 98
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 90 91 92 105
;; live  gen 	 17 [flags] 82 85 89 90 91 97 98
;; live  kill	 17 [flags]
;; rd  in  	(16) 6[19],7[20],16[37],17[46],19[52],82[167],85[171],89[172],90[173,174],91[175,176],92[177],97[182],98[183],105[186]
;; rd  gen 	(8) 17[46],82[167],85[171],89[172],90[173],91[175],97[182],98[183]
;; rd  kill	(22) 17[38,39,40,41,42,43,44,45,46,47,48,49],82[167],85[170,171],89[172],90[173,174],91[175,176],97[182],98[183]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 85 89 90 91 92 105
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 85 89 90 91 92 105
;; rd  out 	(10) 6[19],7[20],16[37],19[52],85[171],89[172],90[173],91[175],92[177],105[186]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d19(bb 0 insn -1) }
;;   reg 7 { d20(bb 0 insn -1) }
;;   reg 16 { d37(bb 0 insn -1) }
;;   reg 19 { d52(bb 0 insn -1) }

( 3 )->[4]->( 6 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ d19(bb 0 insn -1) }u-1(7){ d20(bb 0 insn -1) }u-1(16){ d37(bb 0 insn -1) }u-1(19){ d52(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 85 89 105
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 89
;; lr  def 	 17 [flags] 84 100 104
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 85 89 105
;; live  gen 	 84 100 104
;; live  kill	 17 [flags]
;; rd  in  	(10) 6[19],7[20],16[37],19[52],85[171],89[172],90[173],91[175],92[177],105[186]
;; rd  gen 	(3) 84[169],100[184],104[185]
;; rd  kill	(16) 17[38,39,40,41,42,43,44,45,46,47,48,49],84[168,169],100[184],104[185]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 84 85 104 105
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 84 85 104 105
;; rd  out 	(8) 6[19],7[20],16[37],19[52],84[169],85[171],104[185],105[186]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d19(bb 0 insn -1) }
;;   reg 7 { d20(bb 0 insn -1) }
;;   reg 16 { d37(bb 0 insn -1) }
;;   reg 19 { d52(bb 0 insn -1) }

( 6 )->[5]->( 6 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ d19(bb 0 insn -1) }u-1(7){ d20(bb 0 insn -1) }u-1(16){ d37(bb 0 insn -1) }u-1(19){ d52(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 84 104 105
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 84 105
;; lr  def 	 17 [flags] 84 85
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 84 104 105
;; live  gen 	 84 85
;; live  kill	 17 [flags]
;; rd  in  	(10) 0[1],6[19],7[20],16[37],17[42],19[52],84[168,169],104[185],105[186]
;; rd  gen 	(2) 84[168],85[170]
;; rd  kill	(16) 17[38,39,40,41,42,43,44,45,46,47,48,49],84[168,169],85[170,171]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 84 85 104 105
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 84 85 104 105
;; rd  out 	(8) 6[19],7[20],16[37],19[52],84[168],85[170],104[185],105[186]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d19(bb 0 insn -1) }
;;   reg 7 { d20(bb 0 insn -1) }
;;   reg 16 { d37(bb 0 insn -1) }
;;   reg 19 { d52(bb 0 insn -1) }

( 4 5 )->[6]->( 5 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ d19(bb 0 insn -1) }u-1(7){ d20(bb 0 insn -1) }u-1(16){ d37(bb 0 insn -1) }u-1(19){ d52(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 84 85 104 105
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 84 85 104
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 84 85 104 105
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 17 [flags]
;; live  kill	
;; rd  in  	(10) 6[19],7[20],16[37],19[52],84[168,169],85[170,171],104[185],105[186]
;; rd  gen 	(2) 0[1],17[42]
;; rd  kill	(16) 0[0,1,2,3],17[38,39,40,41,42,43,44,45,46,47,48,49]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 84 104 105
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 84 104 105
;; rd  out 	(8) 6[19],7[20],16[37],19[52],84[168,169],104[185],105[186]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d19(bb 0 insn -1) }
;;   reg 7 { d20(bb 0 insn -1) }
;;   reg 16 { d37(bb 0 insn -1) }
;;   reg 19 { d52(bb 0 insn -1) }

( 2 6 )->[7]->( 9 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ d19(bb 0 insn -1) }u-1(7){ d20(bb 0 insn -1) }u-1(16){ d37(bb 0 insn -1) }u-1(19){ d52(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; live  gen 	 17 [flags]
;; live  kill	
;; rd  in  	(11) 6[19],7[20],16[37],19[52],84[168,169],90[174],91[176],92[177],104[185],105[186]
;; rd  gen 	(1) 17[40]
;; rd  kill	(12) 17[38,39,40,41,42,43,44,45,46,47,48,49]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; rd  out 	(4) 6[19],7[20],16[37],19[52]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d19(bb 0 insn -1) }
;;   reg 7 { d20(bb 0 insn -1) }
;;   reg 16 { d37(bb 0 insn -1) }
;;   reg 19 { d52(bb 0 insn -1) }

( 7 )->[8]->( )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ d19(bb 0 insn -1) }u-1(7){ d20(bb 0 insn -1) }u-1(16){ d37(bb 0 insn -1) }u-1(19){ d52(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 6[19],7[20],16[37],19[52]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 7 [sp] 16 [argp] 19 [frame]
;; live  out 	 7 [sp] 16 [argp] 19 [frame]
;; rd  out 	(3) 7[20],16[37],19[52]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d19(bb 0 insn -1) }
;;   reg 7 { d20(bb 0 insn -1) }
;;   reg 16 { d37(bb 0 insn -1) }
;;   reg 19 { d52(bb 0 insn -1) }

( 7 )->[9]->( 1 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ d19(bb 0 insn -1) }u-1(7){ d20(bb 0 insn -1) }u-1(16){ d37(bb 0 insn -1) }u-1(19){ d52(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 6[19],7[20],16[37],19[52]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; rd  out 	(4) 6[19],7[20],16[37],19[52]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d19(bb 0 insn -1) }
;;   reg 7 { d20(bb 0 insn -1) }
;;   reg 16 { d37(bb 0 insn -1) }
;;   reg 19 { d52(bb 0 insn -1) }

( 9 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(6){ d19(bb 0 insn -1) }u-1(7){ d20(bb 0 insn -1) }u-1(19){ d52(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 19 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 19 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 6[19],7[20],16[37],19[52]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 6 { d19(bb 0 insn -1) }
;;   reg 7 { d20(bb 0 insn -1) }
;;   reg 19 { d52(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 15 to worklist
  Adding insn 13 to worklist
  Adding insn 6 to worklist
  Adding insn 32 to worklist
  Adding insn 27 to worklist
  Adding insn 52 to worklist
  Adding insn 49 to worklist
  Adding insn 60 to worklist
  Adding insn 59 to worklist
  Adding insn 61 to worklist
Finished finding needed instructions:
Processing use of (reg 7 sp) in insn 61:
Processing use of (reg 19 frame) in insn 59:
Processing use of (reg 17 flags) in insn 60:
Processing use of (reg 7 sp) in insn 49:
Processing use of (reg 0 ax) in insn 49:
  Adding insn 48 to worklist
Processing use of (reg 1 dx) in insn 49:
  Adding insn 44 to worklist
Processing use of (reg 4 si) in insn 49:
  Adding insn 46 to worklist
Processing use of (reg 5 di) in insn 49:
  Adding insn 47 to worklist
Processing use of (reg 104) in insn 46:
  Adding insn 74 to worklist
Processing use of (reg 85 [ prephitmp_6 ]) in insn 44:
  Adding insn 25 to worklist
  Adding insn 40 to worklist
Processing use of (reg 84 [ ivtmp.15 ]) in insn 40:
  Adding insn 35 to worklist
  Adding insn 41 to worklist
Processing use of (reg 105) in insn 40:
  Adding insn 10 to worklist
Processing use of (reg 19 frame) in insn 10:
Processing use of (reg 84 [ ivtmp.15 ]) in insn 41:
Processing use of (reg 100) in insn 35:
  Adding insn 34 to worklist
Processing use of (reg 89 [ k ]) in insn 34:
  Adding insn 21 to worklist
Processing use of (subreg (reg 90 [ ivtmp.30 ]) 0) in insn 21:
  Adding insn 7 to worklist
  Adding insn 30 to worklist
Processing use of (reg 90 [ ivtmp.30 ]) in insn 30:
Processing use of (reg 98) in insn 25:
  Adding insn 22 to worklist
Processing use of (reg 91 [ x ]) in insn 22:
  Adding insn 2 to worklist
  Adding insn 29 to worklist
Processing use of (reg 91 [ x ]) in insn 22:
Processing use of (reg 92 [ y ]) in insn 22:
  Adding insn 3 to worklist
Processing use of (reg 92 [ y ]) in insn 22:
Processing use of (reg 4 si) in insn 3:
Processing use of (reg 97) in insn 29:
Processing use of (reg 5 di) in insn 2:
Processing use of (reg 17 flags) in insn 52:
  Adding insn 51 to worklist
Processing use of (subreg (reg 84 [ ivtmp.15 ]) 0) in insn 51:
Processing use of (reg 85 [ prephitmp_6 ]) in insn 27:
Processing use of (reg 90 [ ivtmp.30 ]) in insn 27:
Processing use of (reg 105) in insn 27:
Processing use of (reg 17 flags) in insn 32:
  Adding insn 31 to worklist
Processing use of (reg 82 [ x ]) in insn 31:
  Adding insn 28 to worklist
Processing use of (reg 92 [ y ]) in insn 31:
Processing use of (reg 91 [ x ]) in insn 28:
Processing use of (reg 19 frame) in insn 6:
Processing use of (reg 95) in insn 13:
  Adding insn 11 to worklist
Processing use of (reg 96) in insn 13:
  Adding insn 12 to worklist
Processing use of (reg 96) in insn 13:
Processing use of (reg 105) in insn 13:
Processing use of (reg 105) in insn 13:
Processing use of (reg 17 flags) in insn 15:
  Adding insn 14 to worklist
Processing use of (reg 91 [ x ]) in insn 14:
starting the processing of deferred insns
ending the processing of deferred insns


print_conv

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 4 [si] 5 [di] 7 [sp] 17 [flags]
;;  ref usage 	r0={4d,1u} r1={4d,1u} r2={3d} r4={4d,2u} r5={4d,2u} r6={1d,9u} r7={1d,11u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,8u} r17={12d,4u} r18={2d} r19={1d,12u} r20={3d} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={3d} r37={3d} r38={2d} r39={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r82={1d,1u} r84={2d,3u} r85={2d,2u} r89={1d,1u} r90={2d,3u} r91={2d,4u} r92={1d,3u} r94={1d} r95={1d,1u} r96={2d,2u} r97={1d,1u} r98={1d,1u} r100={1d,1u} r104={1d,1u} r105={1d,4u} 
;;    total ref usage 265{187d,78u,0e} in 34{32 regular + 2 call} insns.
(note 8 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 8 3 2 (set (reg/v:SI 91 [ x ])
        (reg:SI 5 di [ x ])) "ns.c":20:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 5 di [ x ])
        (nil)))
(insn 3 2 4 2 (set (reg/v:SI 92 [ y ])
        (reg:SI 4 si [ y ])) "ns.c":20:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ y ])
        (nil)))
(note 4 3 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 4 10 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 19 frame)
                        (const_int -8 [0xfffffffffffffff8])) [2 D.3260+0 S8 A64])
                (unspec:DI [
                        (mem/v/f:DI (const_int 40 [0x28]) [3 MEM[(<address-space-1> long unsigned int *)40B]+0 S8 A64 AS1])
                    ] UNSPEC_SP_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "ns.c":20:1 1159 {stack_protect_set_1_di}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 10 6 11 2 (parallel [
            (set (reg/f:DI 105)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -144 [0xffffffffffffff70])))
            (clobber (reg:CC 17 flags))
        ]) "ns.c":21:15 210 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 11 10 12 2 (set (reg:DI 95)
        (const_int 0 [0])) "ns.c":21:15 74 {*movdi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:DI 96)
        (const_int 16 [0x10])) "ns.c":21:15 74 {*movdi_internal}
     (nil))
(insn 13 12 7 2 (parallel [
            (set (reg:DI 96)
                (const_int 0 [0]))
            (set (reg/f:DI 94)
                (plus:DI (ashift:DI (reg:DI 96)
                        (const_int 3 [0x3]))
                    (reg/f:DI 105)))
            (set (mem/c:BLK (reg/f:DI 105) [1 num+0 S128 A128])
                (const_int 0 [0]))
            (use (reg:DI 95))
            (use (reg:DI 96))
        ]) "ns.c":21:15 1080 {*rep_stosdi_rex64}
     (expr_list:REG_DEAD (reg:DI 95)
        (expr_list:REG_UNUSED (reg:DI 96)
            (expr_list:REG_UNUSED (reg/f:DI 94)
                (nil)))))
(insn 7 13 14 2 (set (reg:DI 90 [ ivtmp.30 ])
        (const_int 0 [0])) "ns.c":23:9 74 {*movdi_internal}
     (nil))
(insn 14 7 15 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 91 [ x ])
            (const_int 0 [0]))) "ns.c":23:9 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 15 14 19 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 19)
            (pc))) "ns.c":23:9 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 955630228 (nil)))
 -> 19)
      ; pc falls through to BB 7
(code_label 19 15 20 3 2 (nil) [2 uses])
(note 20 19 21 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 22 3 (set (reg/v:SI 89 [ k ])
        (subreg:SI (reg:DI 90 [ ivtmp.30 ]) 0)) 75 {*movsi_internal}
     (nil))
(insn 22 21 25 3 (parallel [
            (set (reg:SI 97)
                (udiv:SI (reg/v:SI 91 [ x ])
                    (reg/v:SI 92 [ y ])))
            (set (reg:SI 98)
                (umod:SI (reg/v:SI 91 [ x ])
                    (reg/v:SI 92 [ y ])))
            (clobber (reg:CC 17 flags))
        ]) 449 {*udivmodsi4}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 25 22 27 3 (set (reg:SI 85 [ prephitmp_6 ])
        (reg:SI 98)) "ns.c":25:14 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 98)
        (nil)))
(insn 27 25 28 3 (set (mem:SI (plus:DI (mult:DI (reg:DI 90 [ ivtmp.30 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 105)) [1 MEM[(unsigned int *)&num + ivtmp.30_29 * 4]+0 S4 A32])
        (reg:SI 85 [ prephitmp_6 ])) "ns.c":25:10 75 {*movsi_internal}
     (nil))
(insn 28 27 29 3 (set (reg/v:SI 82 [ x ])
        (reg/v:SI 91 [ x ])) 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 91 [ x ])
        (nil)))
(insn 29 28 30 3 (set (reg/v:SI 91 [ x ])
        (reg:SI 97)) "ns.c":26:5 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 97)
        (nil)))
(insn 30 29 31 3 (parallel [
            (set (reg:DI 90 [ ivtmp.30 ])
                (plus:DI (reg:DI 90 [ ivtmp.30 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "ns.c":23:9 210 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 31 30 32 3 (set (reg:CC 17 flags)
        (compare:CC (reg/v:SI 92 [ y ])
            (reg/v:SI 82 [ x ]))) "ns.c":23:9 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg/v:SI 82 [ x ])
        (nil)))
(jump_insn 32 31 33 3 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 19)
            (pc))) "ns.c":23:9 806 {*jcc}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 955630228 (nil)))
 -> 19)
(note 33 32 34 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 34 33 35 4 (parallel [
            (set (reg:SI 100)
                (plus:SI (reg/v:SI 89 [ k ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) 209 {*addsi_1}
     (expr_list:REG_DEAD (reg/v:SI 89 [ k ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 35 34 74 4 (set (reg:DI 84 [ ivtmp.15 ])
        (sign_extend:DI (reg:SI 100))) 147 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 100)
        (nil)))
(insn 74 35 50 4 (set (reg/f:DI 104)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7fd1afc415a0 *.LC0>)) -1
     (nil))
      ; pc falls through to BB 6
(code_label 50 74 38 5 4 (nil) [1 uses])
(note 38 50 40 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 40 38 41 5 (set (reg:SI 85 [ prephitmp_6 ])
        (mem:SI (plus:DI (mult:DI (reg:DI 84 [ ivtmp.15 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 105)) [1 MEM[(unsigned int *)&num + ivtmp.15_5 * 4]+0 S4 A32])) "ns.c":31:3 75 {*movsi_internal}
     (nil))
(insn 41 40 42 5 (parallel [
            (set (reg:DI 84 [ ivtmp.15 ])
                (plus:DI (reg:DI 84 [ ivtmp.15 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) 210 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(code_label 42 41 43 6 3 (nil) [0 uses])
(note 43 42 44 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 44 43 46 6 (set (reg:SI 1 dx)
        (reg:SI 85 [ prephitmp_6 ])) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":112:10 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 85 [ prephitmp_6 ])
        (nil)))
(insn 46 44 47 6 (set (reg:DI 4 si)
        (reg/f:DI 104)) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":112:10 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7fd1afc415a0 *.LC0>)
        (nil)))
(insn 47 46 48 6 (set (reg:SI 5 di)
        (const_int 1 [0x1])) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":112:10 75 {*movsi_internal}
     (nil))
(insn 48 47 49 6 (set (reg:QI 0 ax)
        (const_int 0 [0])) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":112:10 77 {*movqi_internal}
     (nil))
(call_insn 49 48 51 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__printf_chk") [flags 0x41]  <function_decl 0x7fd1aff14c00 __printf_chk>) [0 __builtin___printf_chk S1 A8])
            (const_int 0 [0]))) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":112:10 824 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("__printf_chk") [flags 0x41]  <function_decl 0x7fd1aff14c00 __printf_chk>)
                        (nil))))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:SI (use (reg:SI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (nil))))))
(insn 51 49 52 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (subreg:SI (reg:DI 84 [ ivtmp.15 ]) 0)
            (const_int -1 [0xffffffffffffffff]))) "ns.c":30:10 11 {*cmpsi_1}
     (nil))
(jump_insn 52 51 57 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 50)
            (pc))) "ns.c":30:10 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 955630228 (nil)))
 -> 50)
(code_label 57 52 64 7 1 (nil) [0 uses])
(note 64 57 59 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 59 64 60 7 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 19 frame)
                                (const_int -8 [0xfffffffffffffff8])) [2 D.3260+0 S8 A64])
                        (mem/v/f:DI (const_int 40 [0x28]) [3 MEM[(<address-space-1> long unsigned int *)40B]+0 S8 A64 AS1])
                    ] UNSPEC_SP_TEST))
            (clobber (scratch:DI))
        ]) "ns.c":32:1 1164 {stack_protect_test_1_di}
     (nil))
(jump_insn 60 59 67 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 63)
            (pc))) "ns.c":32:1 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1073312332 (nil)))
 -> 63)
(note 67 60 61 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(call_insn 61 67 63 8 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fd1afc2e900 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) "ns.c":32:1 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fd1afc2e900 __stack_chk_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (nil))
(code_label 63 61 68 9 6 (nil) [1 uses])
(note 68 63 0 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

;; Function main (main, funcdef_no=39, decl_uid=3196, cgraph_uid=40, symbol_order=39) (executed once)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 7 n_edges 6 count 7 (    1)


main

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 17 [flags]
;;  ref usage 	r0={7d,4u} r1={7d,2u} r2={6d,1u} r4={8d,3u} r5={8d,3u} r6={1d,6u} r7={1d,10u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r16={1d,5u} r17={9d,2u} r18={4d} r19={1d,12u,2e} r20={5d} r21={5d} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={5d} r37={5d} r38={4d} r39={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r84={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} 
;;    total ref usage 371{312d,57u,2e} in 30{26 regular + 4 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302
;;  reg->defs[] map:	0[0,6] 1[7,13] 2[14,19] 4[20,27] 5[28,35] 6[36,36] 7[37,37] 8[38,41] 9[42,45] 10[46,49] 11[50,53] 12[54,57] 13[58,61] 14[62,65] 15[66,69] 16[70,70] 17[71,79] 18[80,83] 19[84,84] 20[85,89] 21[90,94] 22[95,99] 23[100,104] 24[105,109] 25[110,114] 26[115,119] 27[120,124] 28[125,128] 29[129,132] 30[133,136] 31[137,140] 32[141,144] 33[145,148] 34[149,152] 35[153,156] 36[157,161] 37[162,166] 38[167,170] 39[171,174] 44[175,178] 45[179,182] 46[183,186] 47[187,190] 48[191,194] 49[195,198] 50[199,202] 51[203,206] 52[207,210] 53[211,214] 54[215,218] 55[219,222] 56[223,226] 57[227,230] 58[231,234] 59[235,238] 60[239,242] 61[243,246] 62[247,250] 63[251,254] 64[255,258] 65[259,262] 66[263,266] 67[267,270] 68[271,274] 69[275,278] 70[279,282] 71[283,286] 72[287,290] 73[291,294] 74[295,298] 75[299,302] 84[303,303] 87[304,304] 88[305,305] 89[306,306] 90[307,307] 91[308,308] 92[309,309] 93[310,310] 94[311,311] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d6(0){ }d13(1){ }d19(2){ }d27(4){ }d35(5){ }d36(6){ }d37(7){ }d70(16){ }d84(19){ }d89(20){ }d94(21){ }d99(22){ }d104(23){ }d109(24){ }d114(25){ }d119(26){ }d124(27){ }d161(36){ }d166(37){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[6],1[13],2[19],4[27],5[35],6[36],7[37],16[70],19[84],20[89],21[94],22[99],23[104],24[109],25[114],26[119],27[124],36[161],37[166]
;; rd  kill	(90) 0[0,1,2,3,4,5,6],1[7,8,9,10,11,12,13],2[14,15,16,17,18,19],4[20,21,22,23,24,25,26,27],5[28,29,30,31,32,33,34,35],6[36],7[37],16[70],19[84],20[85,86,87,88,89],21[90,91,92,93,94],22[95,96,97,98,99],23[100,101,102,103,104],24[105,106,107,108,109],25[110,111,112,113,114],26[115,116,117,118,119],27[120,121,122,123,124],36[157,158,159,160,161],37[162,163,164,165,166]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; rd  out 	(4) 6[36],7[37],16[70],19[84]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 4 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ d36(bb 0 insn -1) }u-1(7){ d37(bb 0 insn -1) }u-1(16){ d70(bb 0 insn -1) }u-1(19){ d84(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 84 87 88 89
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 17 [flags] 84 87 88 89
;; live  kill	 17 [flags]
;; rd  in  	(4) 6[36],7[37],16[70],19[84]
;; rd  gen 	(6) 0[4],17[76],84[303],87[304],88[305],89[306]
;; rd  kill	(20) 0[0,1,2,3,4,5,6],17[71,72,73,74,75,76,77,78,79],84[303],87[304],88[305],89[306]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; rd  out 	(4) 6[36],7[37],16[70],19[84]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d36(bb 0 insn -1) }
;;   reg 7 { d37(bb 0 insn -1) }
;;   reg 16 { d70(bb 0 insn -1) }
;;   reg 19 { d84(bb 0 insn -1) }

( 2 )->[3]->( )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ d36(bb 0 insn -1) }u-1(7){ d37(bb 0 insn -1) }u-1(16){ d70(bb 0 insn -1) }u-1(19){ d84(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 90 91 92
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 5 [di] 90 91 92
;; live  kill	
;; rd  in  	(4) 6[36],7[37],16[70],19[84]
;; rd  gen 	(3) 90[307],91[308],92[309]
;; rd  kill	(3) 90[307],91[308],92[309]
;;  UD chains for artificial uses at top
;; lr  out 	 7 [sp] 16 [argp] 19 [frame]
;; live  out 	 7 [sp] 16 [argp] 19 [frame]
;; rd  out 	(3) 7[37],16[70],19[84]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d36(bb 0 insn -1) }
;;   reg 7 { d37(bb 0 insn -1) }
;;   reg 16 { d70(bb 0 insn -1) }
;;   reg 19 { d84(bb 0 insn -1) }

( 2 )->[4]->( 6 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ d36(bb 0 insn -1) }u-1(7){ d37(bb 0 insn -1) }u-1(16){ d70(bb 0 insn -1) }u-1(19){ d84(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 93 94
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; live  gen 	 4 [si] 5 [di] 17 [flags] 93 94
;; live  kill	
;; rd  in  	(4) 6[36],7[37],16[70],19[84]
;; rd  gen 	(3) 17[72],93[310],94[311]
;; rd  kill	(11) 17[71,72,73,74,75,76,77,78,79],93[310],94[311]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; rd  out 	(4) 6[36],7[37],16[70],19[84]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d36(bb 0 insn -1) }
;;   reg 7 { d37(bb 0 insn -1) }
;;   reg 16 { d70(bb 0 insn -1) }
;;   reg 19 { d84(bb 0 insn -1) }

( 4 )->[5]->( )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ d36(bb 0 insn -1) }u-1(7){ d37(bb 0 insn -1) }u-1(16){ d70(bb 0 insn -1) }u-1(19){ d84(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 6[36],7[37],16[70],19[84]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 7 [sp] 16 [argp] 19 [frame]
;; live  out 	 7 [sp] 16 [argp] 19 [frame]
;; rd  out 	(3) 7[37],16[70],19[84]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d36(bb 0 insn -1) }
;;   reg 7 { d37(bb 0 insn -1) }
;;   reg 16 { d70(bb 0 insn -1) }
;;   reg 19 { d84(bb 0 insn -1) }

( 4 )->[6]->( 1 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ d36(bb 0 insn -1) }u-1(7){ d37(bb 0 insn -1) }u-1(16){ d70(bb 0 insn -1) }u-1(19){ d84(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; live  gen 	 0 [ax]
;; live  kill	
;; rd  in  	(4) 6[36],7[37],16[70],19[84]
;; rd  gen 	(1) 0[0]
;; rd  kill	(7) 0[0,1,2,3,4,5,6]
;;  UD chains for artificial uses at top
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; rd  out 	(5) 0[0],6[36],7[37],16[70],19[84]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d36(bb 0 insn -1) }
;;   reg 7 { d37(bb 0 insn -1) }
;;   reg 16 { d70(bb 0 insn -1) }
;;   reg 19 { d84(bb 0 insn -1) }

( 6 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ d0(bb 6 insn 45) }u-1(6){ d36(bb 0 insn -1) }u-1(7){ d37(bb 0 insn -1) }u-1(19){ d84(bb 0 insn -1) }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;; lr  def 	
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(5) 0[0],6[36],7[37],16[70],19[84]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 0 { d0(bb 6 insn 45) }
;;   reg 6 { d36(bb 0 insn -1) }
;;   reg 7 { d37(bb 0 insn -1) }
;;   reg 19 { d84(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 17 to worklist
  Adding insn 14 to worklist
  Adding insn 4 to worklist
  Adding insn 26 to worklist
  Adding insn 41 to worklist
  Adding insn 40 to worklist
  Adding insn 34 to worklist
  Adding insn 42 to worklist
  Adding insn 46 to worklist
Finished finding needed instructions:
  Adding insn 45 to worklist
Processing use of (reg 0 ax) in insn 46:
Processing use of (reg 7 sp) in insn 42:
Processing use of (reg 7 sp) in insn 34:
Processing use of (reg 4 si) in insn 34:
  Adding insn 32 to worklist
Processing use of (reg 5 di) in insn 34:
  Adding insn 33 to worklist
Processing use of (reg 94 [ x ]) in insn 33:
  Adding insn 31 to worklist
Processing use of (reg 19 frame) in insn 31:
Processing use of (reg 93 [ y ]) in insn 32:
  Adding insn 30 to worklist
Processing use of (reg 19 frame) in insn 30:
Processing use of (reg 19 frame) in insn 40:
Processing use of (reg 17 flags) in insn 41:
Processing use of (reg 7 sp) in insn 26:
Processing use of (reg 1 dx) in insn 26:
  Adding insn 21 to worklist
Processing use of (reg 2 cx) in insn 26:
  Adding insn 20 to worklist
Processing use of (reg 4 si) in insn 26:
  Adding insn 23 to worklist
Processing use of (reg 5 di) in insn 26:
  Adding insn 25 to worklist
Processing use of (reg 92) in insn 25:
  Adding insn 24 to worklist
Processing use of (reg 91) in insn 23:
  Adding insn 22 to worklist
Processing use of (reg 90) in insn 20:
  Adding insn 19 to worklist
Processing use of (reg 19 frame) in insn 4:
Processing use of (reg 7 sp) in insn 14:
Processing use of (reg 0 ax) in insn 14:
  Adding insn 13 to worklist
Processing use of (reg 1 dx) in insn 14:
  Adding insn 9 to worklist
Processing use of (reg 4 si) in insn 14:
  Adding insn 10 to worklist
Processing use of (reg 5 di) in insn 14:
  Adding insn 12 to worklist
Processing use of (reg 89) in insn 12:
  Adding insn 11 to worklist
Processing use of (reg 88) in insn 10:
  Adding insn 8 to worklist
Processing use of (reg 19 frame) in insn 8:
Processing use of (reg 87) in insn 9:
  Adding insn 7 to worklist
Processing use of (reg 19 frame) in insn 7:
Processing use of (reg 17 flags) in insn 17:
  Adding insn 16 to worklist
Processing use of (reg 84 [ res ]) in insn 16:
  Adding insn 15 to worklist
Processing use of (reg 0 ax) in insn 15:
starting the processing of deferred insns
ending the processing of deferred insns


main

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 17 [flags]
;;  ref usage 	r0={7d,4u} r1={7d,2u} r2={6d,1u} r4={8d,3u} r5={8d,3u} r6={1d,6u} r7={1d,10u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r16={1d,5u} r17={9d,2u} r18={4d} r19={1d,12u,2e} r20={5d} r21={5d} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={5d} r37={5d} r38={4d} r39={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r84={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} 
;;    total ref usage 371{312d,57u,2e} in 30{26 regular + 4 call} insns.
(note 5 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 5 4 2 NOTE_INSN_FUNCTION_BEG)
(insn 4 2 7 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 19 frame)
                        (const_int -8 [0xfffffffffffffff8])) [2 D.3268+0 S8 A64])
                (unspec:DI [
                        (mem/v/f:DI (const_int 40 [0x28]) [3 MEM[(<address-space-1> long unsigned int *)40B]+0 S8 A64 AS1])
                    ] UNSPEC_SP_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "ns.c":8:1 1159 {stack_protect_set_1_di}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 7 4 8 2 (parallel [
            (set (reg/f:DI 87)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "ns.c":11:7 210 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 8 7 9 2 (parallel [
            (set (reg/f:DI 88)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) "ns.c":11:7 210 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 9 8 10 2 (set (reg:DI 1 dx)
        (reg/f:DI 87)) "ns.c":11:7 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 19 frame)
                (const_int -12 [0xfffffffffffffff4]))
            (nil))))
(insn 10 9 11 2 (set (reg:DI 4 si)
        (reg/f:DI 88)) "ns.c":11:7 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0]))
            (nil))))
(insn 11 10 12 2 (set (reg/f:DI 89)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7fd1afc511b0 *.LC1>)) "ns.c":11:7 74 {*movdi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:DI 5 di)
        (reg/f:DI 89)) "ns.c":11:7 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 89)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7fd1afc511b0 *.LC1>)
            (nil))))
(insn 13 12 14 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) "ns.c":11:7 77 {*movqi_internal}
     (nil))
(call_insn 14 13 15 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__isoc99_scanf") [flags 0x41]  <function_decl 0x7fd1afeecd00 scanf>) [0 __builtin_scanf S1 A8])
            (const_int 0 [0]))) "ns.c":11:7 824 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__isoc99_scanf") [flags 0x41]  <function_decl 0x7fd1afeecd00 scanf>)
                    (nil)))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 15 14 16 2 (set (reg/v:SI 84 [ res ])
        (reg:SI 0 ax)) "ns.c":11:7 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 16 15 17 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 84 [ res ])
            (const_int 2 [0x2]))) "ns.c":13:1 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg/v:SI 84 [ res ])
        (nil)))
(jump_insn 17 16 18 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 28)
            (pc))) "ns.c":13:1 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1073312332 (nil)))
 -> 28)
(note 18 17 19 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 3 (set (reg/f:DI 90)
        (symbol_ref:DI ("__PRETTY_FUNCTION__.0") [flags 0x2]  <var_decl 0x7fd1b0000870 __PRETTY_FUNCTION__>)) "ns.c":13:1 74 {*movdi_internal}
     (nil))
(insn 20 19 21 3 (set (reg:DI 2 cx)
        (reg/f:DI 90)) "ns.c":13:1 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 90)
        (expr_list:REG_EQUAL (symbol_ref:DI ("__PRETTY_FUNCTION__.0") [flags 0x2]  <var_decl 0x7fd1b0000870 __PRETTY_FUNCTION__>)
            (nil))))
(insn 21 20 22 3 (set (reg:SI 1 dx)
        (const_int 13 [0xd])) "ns.c":13:1 75 {*movsi_internal}
     (nil))
(insn 22 21 23 3 (set (reg/f:DI 91)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7fd1afc51240 *.LC2>)) "ns.c":13:1 74 {*movdi_internal}
     (nil))
(insn 23 22 24 3 (set (reg:DI 4 si)
        (reg/f:DI 91)) "ns.c":13:1 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 91)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7fd1afc51240 *.LC2>)
            (nil))))
(insn 24 23 25 3 (set (reg/f:DI 92)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7fd1afc512d0 *.LC3>)) "ns.c":13:1 74 {*movdi_internal}
     (nil))
(insn 25 24 26 3 (set (reg:DI 5 di)
        (reg/f:DI 92)) "ns.c":13:1 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 92)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7fd1afc512d0 *.LC3>)
            (nil))))
(call_insn 26 25 28 3 (call (mem:QI (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7fd1aff97b00 __assert_fail>) [0 __assert_fail S1 A8])
        (const_int 0 [0])) "ns.c":13:1 813 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:SI 1 dx)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7fd1aff97b00 __assert_fail>)
                        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                            (expr_list:REG_NORETURN (const_int 0 [0])
                                (expr_list:REG_EH_REGION (const_int 0 [0])
                                    (nil)))))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(code_label 28 26 29 4 14 (nil) [1 uses])
(note 29 28 30 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 31 4 (set (reg:SI 93 [ y ])
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 y+0 S4 A32])) "ns.c":15:1 75 {*movsi_internal}
     (nil))
(insn 31 30 32 4 (set (reg:SI 94 [ x ])
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [1 x+0 S4 A64])) "ns.c":15:1 75 {*movsi_internal}
     (nil))
(insn 32 31 33 4 (set (reg:SI 4 si)
        (reg:SI 93 [ y ])) "ns.c":15:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 93 [ y ])
        (nil)))
(insn 33 32 34 4 (set (reg:SI 5 di)
        (reg:SI 94 [ x ])) "ns.c":15:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 94 [ x ])
        (nil)))
(call_insn 34 33 40 4 (call (mem:QI (symbol_ref:DI ("print_conv") [flags 0x3]  <function_decl 0x7fd1afc1bd00 print_conv>) [0 print_conv S1 A8])
        (const_int 0 [0])) "ns.c":15:1 813 {*call}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("print_conv") [flags 0x3]  <function_decl 0x7fd1afc1bd00 print_conv>)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 40 34 41 4 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 19 frame)
                                (const_int -8 [0xfffffffffffffff8])) [2 D.3268+0 S8 A64])
                        (mem/v/f:DI (const_int 40 [0x28]) [3 MEM[(<address-space-1> long unsigned int *)40B]+0 S8 A64 AS1])
                    ] UNSPEC_SP_TEST))
            (clobber (scratch:DI))
        ]) "ns.c":17:1 1164 {stack_protect_test_1_di}
     (nil))
(jump_insn 41 40 48 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 44)
            (pc))) "ns.c":17:1 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1073312332 (nil)))
 -> 44)
(note 48 41 42 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(call_insn 42 48 44 5 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fd1afc2e900 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) "ns.c":17:1 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fd1afc2e900 __stack_chk_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (nil))
(code_label 44 42 49 6 15 (nil) [1 uses])
(note 49 44 45 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 45 49 46 6 (set (reg/i:SI 0 ax)
        (const_int 0 [0])) "ns.c":17:1 75 {*movsi_internal}
     (nil))
(insn 46 45 0 6 (use (reg/i:SI 0 ax)) "ns.c":17:1 -1
     (nil))
