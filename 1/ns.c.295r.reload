
;; Function print_conv (print_conv, funcdef_no=40, decl_uid=3195, cgraph_uid=41, symbol_order=40)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=176, prev_offset=0)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 19 to 7 (offset=144, prev_offset=0)
Can eliminate 19 to 6 (offset=-24, prev_offset=0)
            2 Scratch win: reject+=2
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 6:  (0) =m  (1) m  (2) =&r {stack_protect_set_1_di}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 12:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 86:  (0) r  (1) Z {*movdi_internal}
            3 Matching alt: reject+=2
            3 Small class reload: reject+=3
          alt=0,overall=11,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 13:  (0) =D  (1) =c  (2) a  (3) 0  (4) 1 {*rep_stosdi_rex64}
      Creating newreg=111 from oldreg=94, assigning class DIREG to r111
   13: {r96:DI=0;r111:DI=r96:DI<<0x3+r111:DI;[r111:DI]=0;use r95:DI;use r96:DI;}
      REG_DEAD r95:DI
      REG_UNUSED r96:DI
      REG_UNUSED r94:DI
    Inserting insn reload before:
   88: r111:DI=r105:DI

          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 7:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 14:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 21:  (0) =r  (1) g {*movsi_internal}
            1 Early clobber: reject++
            2 Matching alt: reject+=2
            2 Small class reload: reject+=3
          alt=0,overall=12,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 25:  (0) =a  (1) =&d  (2) 0  (3) rm {*udivmodsi4}
      Creating newreg=112 from oldreg=97, assigning class AREG to r112
   25: {r112:SI=udiv(r112:SI,r92:SI);r85:SI=umod(r112:SI,r92:SI);clobber flags:CC;}
      REG_UNUSED flags:CC
    Inserting insn reload before:
   89: r112:SI=r91:SI
    Inserting insn reload after:
   90: r97:SI=r112:SI

            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 27:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 30:  (0) =rm  (1) %0  (2) re {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 31:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 34:  (0) =rm  (1) %0  (2) re {*addsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 35:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 74:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 40:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 41:  (0) =rm  (1) %0  (2) re {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 47:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 48:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 49:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 51:  (0) rm  (1) re {*cmpsi_1}
            3 Scratch win: reject+=2
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 59:  (1) m  (2) m  (3) =&r {stack_protect_test_1_di}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 61:  (0) rBwBz {*call}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2
EBB 3
EBB 4
EBB 5
EBB 6
EBB 7
EBB 8
EBB 9

********** Pseudo live ranges #1: **********

  BB 8
   Insn 61: point = 0, n_alt = 0
  BB 9
  BB 7
   Insn 60: point = 0, n_alt = -1
   Insn 59: point = 0, n_alt = 0
  BB 6
   Insn 52: point = 2, n_alt = -1
   Insn 51: point = 2, n_alt = 0
   Insn 49: point = 2, n_alt = 0
   Insn 48: point = 2, n_alt = 3
   Insn 47: point = 2, n_alt = 0
   Insn 46: point = 2, n_alt = -2
   Insn 44: point = 2, n_alt = -2
  BB 4
   Insn 84: point = 4, n_alt = -1
   Insn 74: point = 4, n_alt = 4
   Insn 35: point = 5, n_alt = 1
   Insn 34: point = 7, n_alt = 0
  BB 3
   Insn 32: point = 10, n_alt = -1
   Insn 31: point = 10, n_alt = 0
   Insn 30: point = 11, n_alt = 0
   Insn 29: point = 12, n_alt = -2
   Insn 28: point = 14, n_alt = -2
   Insn 27: point = 16, n_alt = 1
   Insn 90: point = 16, n_alt = -2
	Hard reg 0 is preferable by r112 with profit 890
   Insn 25: point = 18, n_alt = 0
   Insn 89: point = 20, n_alt = -2
	Hard reg 0 is preferable by r112 with profit 890
	Hard reg 36 is preferable by r112 with profit 890
   Insn 21: point = 21, n_alt = 0
  BB 5
   Insn 41: point = 23, n_alt = 0
   Insn 40: point = 24, n_alt = 0
  BB 2
   Insn 15: point = 26, n_alt = -1
   Insn 14: point = 26, n_alt = 0
   Insn 7: point = 26, n_alt = 2
   Insn 13: point = 27, n_alt = 0
   Insn 88: point = 29, n_alt = -2
	Hard reg 6 is preferable by r111 with profit 110
   Insn 86: point = 30, n_alt = 2
   Insn 12: point = 31, n_alt = 2
   Insn 10: point = 32, n_alt = -2
   Insn 6: point = 33, n_alt = 0
   Insn 3: point = 35, n_alt = -2
   Insn 83: point = 37, n_alt = -2
   Insn 2: point = 38, n_alt = -2
   Insn 82: point = 40, n_alt = -2
 r82: [10..14]
 r84: [23..25] [2..5]
 r85: [23..24] [2..19]
 r89: [8..21]
 r90: [26..26] [10..22]
 r91: [26..38] [15..22] [10..12]
 r92: [26..35] [10..22]
 r95: [28..30]
 r96: [27..31]
 r97: [13..16]
 r100: [6..7]
 r104: [23..25] [2..4]
 r105: [2..32]
 r106: [39..40]
 r107: [36..37]
 r108: [33..34]
 r109: [0..1]
 r111: [27..29]
 r112: [17..20]
Compressing live ranges: from 41 to 25 - 60%
Ranges after the compression:
 r82: [6..9]
 r84: [14..15] [2..3]
 r85: [2..15]
 r89: [6..13]
 r90: [16..16] [6..13]
 r91: [16..22] [10..13] [6..7]
 r92: [16..20] [6..13]
 r95: [17..18]
 r96: [17..18]
 r97: [8..11]
 r100: [4..5]
 r104: [14..15] [2..3]
 r105: [2..18]
 r106: [23..24]
 r107: [21..22]
 r108: [19..20]
 r109: [0..1]
 r111: [17..18]
 r112: [12..13]

********** Assignment #1: **********

	 Assigning to 112 (cl=AREG, orig=97, freq=2670, tfirst=112, tfreq=2670)...
	   Assign 0 to reload r112 (freq=2670)
	 Assigning to 111 (cl=DIREG, orig=94, freq=220, tfirst=111, tfreq=220)...
	   Assign 5 to reload r111 (freq=220)

********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=176, prev_offset=176)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 19 to 7 (offset=144, prev_offset=144)
Can eliminate 19 to 6 (offset=-24, prev_offset=0)
changing reg in insn 28
changing reg in insn 31
changing reg in insn 41
changing reg in insn 35
changing reg in insn 40
changing reg in insn 41
changing reg in insn 25
changing reg in insn 40
changing reg in insn 27
changing reg in insn 44
changing reg in insn 21
changing reg in insn 34
changing reg in insn 30
changing reg in insn 7
changing reg in insn 27
changing reg in insn 30
changing reg in insn 2
changing reg in insn 29
changing reg in insn 28
changing reg in insn 14
changing reg in insn 3
changing reg in insn 25
changing reg in insn 25
changing reg in insn 31
changing reg in insn 86
changing reg in insn 13
changing reg in insn 13
changing reg in insn 12
changing reg in insn 13
changing reg in insn 13
changing reg in insn 29
changing reg in insn 34
changing reg in insn 35
changing reg in insn 74
changing reg in insn 46
changing reg in insn 10
changing reg in insn 27
changing reg in insn 40
changing reg in insn 82
changing reg in insn 2
changing reg in insn 83
changing reg in insn 3
changing reg in insn 6
changing reg in insn 59
deleting insn with uid = 82.
deleting insn with uid = 83.
deleting insn with uid = 3.
deleting insn with uid = 90.
deleting insn with uid = 44.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 49.
verify found no changes in insn with uid = 61.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 10 n_edges 12 count 11 (  1.1)
df_worklist_dataflow_doublequeue: n_basic_blocks 10 n_edges 12 count 13 (  1.3)


print_conv

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 36 [r8] 40 [r12]
;;  ref usage 	r0={9d,5u} r1={5d,2u} r2={7d,5u} r3={4d,5u} r4={4d,4u} r5={7d,5u} r6={1d,3u} r7={1d,14u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r17={11d,4u} r18={2d} r19={1e} r20={3d} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={5d,3u} r37={3d} r38={2d} r39={2d} r40={1d,1u} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} 
;;    total ref usage 236{184d,51u,1e} in 34{32 regular + 2 call} insns.
(note 1 0 8 NOTE_INSN_DELETED)
(note 8 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 8 4 2 (set (reg/v:SI 36 r8 [orig:91 x ] [91])
        (reg:SI 5 di [106])) "ns.c":20:1 75 {*movsi_internal}
     (nil))
(note 4 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 4 10 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 7 sp)
                        (const_int 136 [0x88])) [2 D.3260+0 S8 A64])
                (unspec:DI [
                        (mem/v/f:DI (const_int 40 [0x28]) [3 MEM[(<address-space-1> long unsigned int *)40B]+0 S8 A64 AS1])
                    ] UNSPEC_SP_SET))
            (set (reg:DI 0 ax [108])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "ns.c":20:1 1159 {stack_protect_set_1_di}
     (nil))
(insn 10 6 12 2 (set (reg/f:DI 6 bp [105])
        (reg/f:DI 7 sp)) "ns.c":21:15 74 {*movdi_internal}
     (expr_list:REG_EQUIV (plus:DI (reg/f:DI 19 frame)
            (const_int -144 [0xffffffffffffff70]))
        (nil)))
(insn 12 10 86 2 (set (reg:DI 2 cx [96])
        (const_int 16 [0x10])) "ns.c":21:15 74 {*movdi_internal}
     (expr_list:REG_EQUAL (const_int 16 [0x10])
        (nil)))
(insn 86 12 88 2 (set (reg:DI 0 ax [95])
        (const_int 0 [0])) "ns.c":21:15 74 {*movdi_internal}
     (expr_list:REG_EQUIV (const_int 0 [0])
        (nil)))
(insn 88 86 13 2 (set (reg/f:DI 5 di [94])
        (reg/f:DI 6 bp [105])) "ns.c":21:15 74 {*movdi_internal}
     (nil))
(insn 13 88 7 2 (parallel [
            (set (reg:DI 2 cx [96])
                (const_int 0 [0]))
            (set (reg/f:DI 5 di [94])
                (plus:DI (ashift:DI (reg:DI 2 cx [96])
                        (const_int 3 [0x3]))
                    (reg/f:DI 5 di [94])))
            (set (mem/c:BLK (reg/f:DI 5 di [94]) [1 num+0 S128 A128])
                (const_int 0 [0]))
            (use (reg:DI 0 ax [95]))
            (use (reg:DI 2 cx [96]))
        ]) "ns.c":21:15 1080 {*rep_stosdi_rex64}
     (nil))
(insn 7 13 14 2 (set (reg:DI 2 cx [orig:90 ivtmp.30 ] [90])
        (const_int 0 [0])) "ns.c":23:9 74 {*movdi_internal}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(insn 14 7 15 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 36 r8 [orig:91 x ] [91])
            (const_int 0 [0]))) "ns.c":23:9 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 15 14 19 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 57)
            (pc))) "ns.c":23:9 806 {*jcc}
     (int_list:REG_BR_PROB 118111604 (nil))
 -> 57)
(code_label 19 15 20 3 2 (nil) [1 uses])
(note 20 19 21 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 22 3 (set (reg/v:SI 3 bx [orig:89 k ] [89])
        (reg:SI 2 cx [orig:90 ivtmp.30 ] [90])) 75 {*movsi_internal}
     (nil))
(note 22 21 89 3 NOTE_INSN_DELETED)
(insn 89 22 25 3 (set (reg:SI 0 ax [97])
        (reg/v:SI 36 r8 [orig:91 x ] [91])) "ns.c":25:14 75 {*movsi_internal}
     (nil))
(insn 25 89 27 3 (parallel [
            (set (reg:SI 0 ax [97])
                (udiv:SI (reg:SI 0 ax [97])
                    (reg/v:SI 4 si [orig:92 y ] [92])))
            (set (reg:SI 1 dx [orig:85 prephitmp_6 ] [85])
                (umod:SI (reg:SI 0 ax [97])
                    (reg/v:SI 4 si [orig:92 y ] [92])))
            (clobber (reg:CC 17 flags))
        ]) "ns.c":25:14 449 {*udivmodsi4}
     (nil))
(insn 27 25 28 3 (set (mem:SI (plus:DI (mult:DI (reg:DI 2 cx [orig:90 ivtmp.30 ] [90])
                    (const_int 4 [0x4]))
                (reg/f:DI 6 bp [105])) [1 MEM[(unsigned int *)&num + ivtmp.30_29 * 4]+0 S4 A32])
        (reg:SI 1 dx [orig:85 prephitmp_6 ] [85])) "ns.c":25:10 75 {*movsi_internal}
     (nil))
(insn 28 27 29 3 (set (reg/v:SI 5 di [orig:82 x ] [82])
        (reg/v:SI 36 r8 [orig:91 x ] [91])) 75 {*movsi_internal}
     (nil))
(insn 29 28 30 3 (set (reg/v:SI 36 r8 [orig:91 x ] [91])
        (reg:SI 0 ax [97])) "ns.c":26:5 75 {*movsi_internal}
     (nil))
(insn 30 29 31 3 (parallel [
            (set (reg:DI 2 cx [orig:90 ivtmp.30 ] [90])
                (plus:DI (reg:DI 2 cx [orig:90 ivtmp.30 ] [90])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "ns.c":23:9 210 {*adddi_1}
     (nil))
(insn 31 30 32 3 (set (reg:CC 17 flags)
        (compare:CC (reg/v:SI 4 si [orig:92 y ] [92])
            (reg/v:SI 5 di [orig:82 x ] [82]))) "ns.c":23:9 11 {*cmpsi_1}
     (nil))
(jump_insn 32 31 33 3 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 19)
            (pc))) "ns.c":23:9 806 {*jcc}
     (int_list:REG_BR_PROB 955630228 (nil))
 -> 19)
(note 33 32 34 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 34 33 35 4 (parallel [
            (set (reg:SI 3 bx [100])
                (plus:SI (reg/v:SI 3 bx [orig:89 k ] [89])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) 209 {*addsi_1}
     (nil))
(insn 35 34 74 4 (set (reg:DI 3 bx [orig:84 ivtmp.15 ] [84])
        (sign_extend:DI (reg:SI 3 bx [100]))) 147 {*extendsidi2_rex64}
     (nil))
(insn 74 35 84 4 (set (reg/f:DI 40 r12 [104])
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7fd1afc415a0 *.LC0>)) 74 {*movdi_internal}
     (expr_list:REG_EQUIV (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7fd1afc415a0 *.LC0>)
        (nil)))
(jump_insn 84 74 85 4 (set (pc)
        (label_ref 42)) 807 {jump}
     (nil)
 -> 42)
(barrier 85 84 50)
(code_label 50 85 38 5 4 (nil) [1 uses])
(note 38 50 40 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 40 38 41 5 (set (reg:SI 1 dx [orig:85 prephitmp_6 ] [85])
        (mem:SI (plus:DI (mult:DI (reg:DI 3 bx [orig:84 ivtmp.15 ] [84])
                    (const_int 4 [0x4]))
                (reg/f:DI 6 bp [105])) [1 MEM[(unsigned int *)&num + ivtmp.15_5 * 4]+0 S4 A32])) "ns.c":31:3 75 {*movsi_internal}
     (nil))
(insn 41 40 42 5 (parallel [
            (set (reg:DI 3 bx [orig:84 ivtmp.15 ] [84])
                (plus:DI (reg:DI 3 bx [orig:84 ivtmp.15 ] [84])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) 210 {*adddi_1}
     (nil))
(code_label 42 41 43 6 3 (nil) [1 uses])
(note 43 42 46 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 46 43 47 6 (set (reg:DI 4 si)
        (reg/f:DI 40 r12 [104])) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":112:10 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7fd1afc415a0 *.LC0>)
        (nil)))
(insn 47 46 48 6 (set (reg:SI 5 di)
        (const_int 1 [0x1])) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":112:10 75 {*movsi_internal}
     (nil))
(insn 48 47 49 6 (set (reg:QI 0 ax)
        (const_int 0 [0])) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":112:10 77 {*movqi_internal}
     (nil))
(call_insn 49 48 51 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__printf_chk") [flags 0x41]  <function_decl 0x7fd1aff14c00 __printf_chk>) [0 __builtin___printf_chk S1 A8])
            (const_int 0 [0]))) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":112:10 824 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__printf_chk") [flags 0x41]  <function_decl 0x7fd1aff14c00 __printf_chk>)
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:SI (use (reg:SI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (nil))))))
(insn 51 49 52 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 3 bx [orig:84 ivtmp.15 ] [84])
            (const_int -1 [0xffffffffffffffff]))) "ns.c":30:10 11 {*cmpsi_1}
     (nil))
(jump_insn 52 51 57 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 50)
            (pc))) "ns.c":30:10 806 {*jcc}
     (int_list:REG_BR_PROB 955630228 (nil))
 -> 50)
(code_label 57 52 64 7 1 (nil) [1 uses])
(note 64 57 59 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 59 64 60 7 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 7 sp)
                                (const_int 136 [0x88])) [2 D.3260+0 S8 A64])
                        (mem/v/f:DI (const_int 40 [0x28]) [3 MEM[(<address-space-1> long unsigned int *)40B]+0 S8 A64 AS1])
                    ] UNSPEC_SP_TEST))
            (clobber (reg:DI 0 ax [109]))
        ]) "ns.c":32:1 1164 {stack_protect_test_1_di}
     (nil))
(jump_insn 60 59 67 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 63)
            (pc))) "ns.c":32:1 806 {*jcc}
     (int_list:REG_BR_PROB 1073312332 (nil))
 -> 63)
(note 67 60 61 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(call_insn 61 67 62 8 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fd1afc2e900 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) "ns.c":32:1 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fd1afc2e900 __stack_chk_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (nil))
(barrier 62 61 63)
(code_label 63 62 68 9 6 (nil) [1 uses])
(note 68 63 87 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(note 87 68 0 NOTE_INSN_DELETED)

;; Function main (main, funcdef_no=39, decl_uid=3196, cgraph_uid=40, symbol_order=39) (executed once)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=0)
Can eliminate 19 to 6 (offset=-8, prev_offset=0)
            2 Scratch win: reject+=2
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4:  (0) =m  (1) m  (2) =&r {stack_protect_set_1_di}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=23,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 7:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 11:  (0) r  (1) i {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 13:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 14:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 16:  (0) rm  (1) re {*cmpsi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 19:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 21:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 22:  (0) r  (1) i {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 24:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 26:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 32:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 33:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 34:  (0) rBwBz {*call}
            3 Scratch win: reject+=2
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 40:  (1) m  (2) m  (3) =&r {stack_protect_test_1_di}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 42:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 45:  (0) =r  (1) g {*movsi_internal}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2
EBB 3
EBB 4
EBB 5
EBB 6

********** Pseudo live ranges #1: **********

  BB 3
   Insn 26: point = 0, n_alt = 0
   Insn 25: point = 0, n_alt = -2
   Insn 24: point = 1, n_alt = 4
   Insn 23: point = 2, n_alt = -2
   Insn 22: point = 3, n_alt = 4
   Insn 21: point = 4, n_alt = 0
   Insn 20: point = 4, n_alt = -2
   Insn 19: point = 5, n_alt = 4
  BB 5
   Insn 42: point = 6, n_alt = 0
  BB 6
   Insn 46: point = 6, n_alt = -1
   Insn 45: point = 6, n_alt = 0
  BB 4
   Insn 41: point = 6, n_alt = -1
   Insn 40: point = 6, n_alt = 0
   Insn 34: point = 8, n_alt = 0
   Insn 33: point = 8, n_alt = 0
   Insn 32: point = 8, n_alt = 0
  BB 2
   Insn 17: point = 8, n_alt = -1
   Insn 16: point = 8, n_alt = 0
   Insn 50: point = 9, n_alt = -2
   Insn 14: point = 10, n_alt = 0
   Insn 13: point = 10, n_alt = 3
   Insn 12: point = 10, n_alt = -2
   Insn 11: point = 11, n_alt = 4
   Insn 10: point = 12, n_alt = -2
   Insn 9: point = 13, n_alt = -2
   Insn 8: point = 14, n_alt = -2
   Insn 7: point = 15, n_alt = 3
   Insn 4: point = 16, n_alt = 0
 r87: [13..15]
 r88: [12..14]
 r89: [10..11]
 r90: [4..5]
 r91: [2..3]
 r92: [0..1]
 r97: [8..9]
 r98: [16..17]
 r99: [6..7]
Compressing live ranges: from 18 to 16 - 88%
Ranges after the compression:
 r87: [12..13]
 r88: [12..13]
 r89: [10..11]
 r90: [4..5]
 r91: [2..3]
 r92: [0..1]
 r97: [8..9]
 r98: [14..15]
 r99: [6..7]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=32)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=16)
Can eliminate 19 to 6 (offset=-8, prev_offset=0)
changing reg in insn 7
changing reg in insn 9
changing reg in insn 8
changing reg in insn 10
changing reg in insn 11
changing reg in insn 12
changing reg in insn 19
changing reg in insn 20
changing reg in insn 22
changing reg in insn 23
changing reg in insn 24
changing reg in insn 25
changing reg in insn 50
changing reg in insn 16
changing reg in insn 4
changing reg in insn 40
deleting insn with uid = 9.
deleting insn with uid = 10.
deleting insn with uid = 12.
deleting insn with uid = 50.
deleting insn with uid = 20.
deleting insn with uid = 23.
deleting insn with uid = 25.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 7 n_edges 6 count 7 (    1)
df_worklist_dataflow_doublequeue: n_basic_blocks 7 n_edges 6 count 7 (    1)


main

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 17 [flags]
;;  ref usage 	r0={9d,4u} r1={7d,2u} r2={6d,1u} r4={8d,3u} r5={8d,3u} r7={1d,16u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r17={8d,2u} r18={4d} r19={2e} r20={5d} r21={5d} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={5d} r37={5d} r38={4d} r39={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} 
;;    total ref usage 334{301d,31u,2e} in 21{17 regular + 4 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 5 4 2 NOTE_INSN_FUNCTION_BEG)
(insn 4 2 7 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 7 sp)
                        (const_int 8 [0x8])) [2 D.3268+0 S8 A64])
                (unspec:DI [
                        (mem/v/f:DI (const_int 40 [0x28]) [3 MEM[(<address-space-1> long unsigned int *)40B]+0 S8 A64 AS1])
                    ] UNSPEC_SP_SET))
            (set (reg:DI 0 ax [98])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "ns.c":8:1 1159 {stack_protect_set_1_di}
     (nil))
(insn 7 4 8 2 (parallel [
            (set (reg/f:DI 1 dx [87])
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "ns.c":11:7 210 {*adddi_1}
     (expr_list:REG_EQUIV (plus:DI (reg/f:DI 19 frame)
            (const_int -12 [0xfffffffffffffff4]))
        (nil)))
(insn 8 7 11 2 (set (reg/f:DI 4 si [88])
        (reg/f:DI 7 sp)) "ns.c":11:7 74 {*movdi_internal}
     (expr_list:REG_EQUIV (plus:DI (reg/f:DI 19 frame)
            (const_int -16 [0xfffffffffffffff0]))
        (nil)))
(insn 11 8 13 2 (set (reg/f:DI 5 di [89])
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7fd1afc511b0 *.LC1>)) "ns.c":11:7 74 {*movdi_internal}
     (expr_list:REG_EQUIV (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7fd1afc511b0 *.LC1>)
        (nil)))
(insn 13 11 14 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) "ns.c":11:7 77 {*movqi_internal}
     (nil))
(call_insn 14 13 15 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__isoc99_scanf") [flags 0x41]  <function_decl 0x7fd1afeecd00 scanf>) [0 __builtin_scanf S1 A8])
            (const_int 0 [0]))) "ns.c":11:7 824 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__isoc99_scanf") [flags 0x41]  <function_decl 0x7fd1afeecd00 scanf>)
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(note 15 14 16 2 NOTE_INSN_DELETED)
(insn 16 15 17 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [97])
            (const_int 2 [0x2]))) "ns.c":13:1 11 {*cmpsi_1}
     (nil))
(jump_insn 17 16 18 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 28)
            (pc))) "ns.c":13:1 806 {*jcc}
     (int_list:REG_BR_PROB 1073312332 (nil))
 -> 28)
(note 18 17 19 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 21 3 (set (reg/f:DI 2 cx [90])
        (symbol_ref:DI ("__PRETTY_FUNCTION__.0") [flags 0x2]  <var_decl 0x7fd1b0000870 __PRETTY_FUNCTION__>)) "ns.c":13:1 74 {*movdi_internal}
     (expr_list:REG_EQUIV (symbol_ref:DI ("__PRETTY_FUNCTION__.0") [flags 0x2]  <var_decl 0x7fd1b0000870 __PRETTY_FUNCTION__>)
        (nil)))
(insn 21 19 22 3 (set (reg:SI 1 dx)
        (const_int 13 [0xd])) "ns.c":13:1 75 {*movsi_internal}
     (nil))
(insn 22 21 24 3 (set (reg/f:DI 4 si [91])
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7fd1afc51240 *.LC2>)) "ns.c":13:1 74 {*movdi_internal}
     (expr_list:REG_EQUIV (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7fd1afc51240 *.LC2>)
        (nil)))
(insn 24 22 26 3 (set (reg/f:DI 5 di [92])
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7fd1afc512d0 *.LC3>)) "ns.c":13:1 74 {*movdi_internal}
     (expr_list:REG_EQUIV (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7fd1afc512d0 *.LC3>)
        (nil)))
(call_insn 26 24 27 3 (call (mem:QI (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7fd1aff97b00 __assert_fail>) [0 __assert_fail S1 A8])
        (const_int 0 [0])) "ns.c":13:1 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7fd1aff97b00 __assert_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(barrier 27 26 28)
(code_label 28 27 29 4 14 (nil) [1 uses])
(note 29 28 32 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 32 29 33 4 (set (reg:SI 4 si)
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 4 [0x4])) [1 y+0 S4 A32])) "ns.c":15:1 75 {*movsi_internal}
     (nil))
(insn 33 32 34 4 (set (reg:SI 5 di)
        (mem/c:SI (reg/f:DI 7 sp) [1 x+0 S4 A64])) "ns.c":15:1 75 {*movsi_internal}
     (nil))
(call_insn 34 33 40 4 (call (mem:QI (symbol_ref:DI ("print_conv") [flags 0x3]  <function_decl 0x7fd1afc1bd00 print_conv>) [0 print_conv S1 A8])
        (const_int 0 [0])) "ns.c":15:1 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("print_conv") [flags 0x3]  <function_decl 0x7fd1afc1bd00 print_conv>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 40 34 41 4 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 7 sp)
                                (const_int 8 [0x8])) [2 D.3268+0 S8 A64])
                        (mem/v/f:DI (const_int 40 [0x28]) [3 MEM[(<address-space-1> long unsigned int *)40B]+0 S8 A64 AS1])
                    ] UNSPEC_SP_TEST))
            (clobber (reg:DI 0 ax [99]))
        ]) "ns.c":17:1 1164 {stack_protect_test_1_di}
     (nil))
(jump_insn 41 40 48 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 44)
            (pc))) "ns.c":17:1 806 {*jcc}
     (int_list:REG_BR_PROB 1073312332 (nil))
 -> 44)
(note 48 41 42 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(call_insn 42 48 43 5 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fd1afc2e900 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) "ns.c":17:1 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fd1afc2e900 __stack_chk_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (nil))
(barrier 43 42 44)
(code_label 44 43 49 6 15 (nil) [1 uses])
(note 49 44 45 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 45 49 46 6 (set (reg/i:SI 0 ax)
        (const_int 0 [0])) "ns.c":17:1 75 {*movsi_internal}
     (nil))
(insn 46 45 51 6 (use (reg/i:SI 0 ax)) "ns.c":17:1 -1
     (nil))
(note 51 46 0 NOTE_INSN_DELETED)
