
;; Function getchar (null)
;; enabled by -tree-original


{
  return getc (stdin);
}


;; Function fgetc_unlocked (null)
;; enabled by -tree-original


{
  return __builtin_expect (__fp->_IO_read_ptr >= __fp->_IO_read_end, 0) != 0 ? __uflow (__fp) : (int) *(unsigned char *) __fp->_IO_read_ptr++ ;
}


;; Function getc_unlocked (null)
;; enabled by -tree-original


{
  return __builtin_expect (__fp->_IO_read_ptr >= __fp->_IO_read_end, 0) != 0 ? __uflow (__fp) : (int) *(unsigned char *) __fp->_IO_read_ptr++ ;
}


;; Function getchar_unlocked (null)
;; enabled by -tree-original


{
  return __builtin_expect (stdin->_IO_read_ptr >= stdin->_IO_read_end, 0) != 0 ? __uflow (stdin) : (int) *(unsigned char *) stdin->_IO_read_ptr++ ;
}


;; Function putchar (null)
;; enabled by -tree-original


{
  return putc (__c, stdout);
}


;; Function fputc_unlocked (null)
;; enabled by -tree-original


{
  return __builtin_expect (__stream->_IO_write_ptr >= __stream->_IO_write_end, 0) != 0 ? __overflow (__stream, (int) (unsigned char) __c) : (int) (unsigned char) (*__stream->_IO_write_ptr++  = (char) __c);
}


;; Function putc_unlocked (null)
;; enabled by -tree-original


{
  return __builtin_expect (__stream->_IO_write_ptr >= __stream->_IO_write_end, 0) != 0 ? __overflow (__stream, (int) (unsigned char) __c) : (int) (unsigned char) (*__stream->_IO_write_ptr++  = (char) __c);
}


;; Function putchar_unlocked (null)
;; enabled by -tree-original


{
  return __builtin_expect (stdout->_IO_write_ptr >= stdout->_IO_write_end, 0) != 0 ? __overflow (stdout, (int) (unsigned char) __c) : (int) (unsigned char) (*stdout->_IO_write_ptr++  = (char) __c);
}


;; Function feof_unlocked (null)
;; enabled by -tree-original


{
  return (__stream->_flags & 16) != 0;
}


;; Function ferror_unlocked (null)
;; enabled by -tree-original


{
  return (__stream->_flags & 32) != 0;
}


;; Function sprintf (null)
;; enabled by -tree-original


{
  return __builtin___sprintf_chk ((char *) __s, 1, __builtin_object_size ((const void *) __s, 1), (const char *) __fmt, __builtin_va_arg_pack ());
}


;; Function vsprintf (null)
;; enabled by -tree-original


{
  return __builtin___vsprintf_chk ((char *) __s, 1, __builtin_object_size ((const void *) __s, 1), (const char *) __fmt, __ap);
}


;; Function snprintf (null)
;; enabled by -tree-original


{
  return __builtin___snprintf_chk ((char *) __s, __n, 1, __builtin_object_size ((const void *) __s, 1), (const char *) __fmt, __builtin_va_arg_pack ());
}


;; Function vsnprintf (null)
;; enabled by -tree-original


{
  return __builtin___vsnprintf_chk ((char *) __s, __n, 1, __builtin_object_size ((const void *) __s, 1), (const char *) __fmt, __ap);
}


;; Function fprintf (null)
;; enabled by -tree-original


{
  return __fprintf_chk ((struct FILE *) __stream, 1, (const char *) __fmt, __builtin_va_arg_pack ());
}


;; Function printf (null)
;; enabled by -tree-original


{
  return __printf_chk (1, (const char *) __fmt, __builtin_va_arg_pack ());
}


;; Function vprintf (null)
;; enabled by -tree-original


{
  return __vfprintf_chk (stdout, 1, (const char *) __fmt, __ap);
}


;; Function vfprintf (null)
;; enabled by -tree-original


{
  return __vfprintf_chk ((struct FILE *) __stream, 1, (const char *) __fmt, __ap);
}


;; Function dprintf (null)
;; enabled by -tree-original


{
  return __dprintf_chk (__fd, 1, (const char *) __fmt, __builtin_va_arg_pack ());
}


;; Function vdprintf (null)
;; enabled by -tree-original


{
  return __vdprintf_chk (__fd, 1, (const char *) __fmt, __ap);
}


;; Function fgets (null)
;; enabled by -tree-original


{
  size_t sz = __builtin_object_size ((const void *) __s, 1);

    size_t sz = __builtin_object_size ((const void *) __s, 1);
  if (((__builtin_constant_p (__n) != 0 && __n > 0) && __builtin_constant_p ((long unsigned int) __n <= (long unsigned int) sz) != 0) && (long unsigned int) __n <= (long unsigned int) sz)
    {
      return __fgets_alias ((char *) __s, __n, (struct FILE *) __stream);
    }
  if (((__builtin_constant_p (__n) != 0 && __n > 0) && __builtin_constant_p ((long unsigned int) __n <= (long unsigned int) sz) != 0) && (long unsigned int) __n > (long unsigned int) sz)
    {
      return __fgets_chk_warn ((char *) __s, sz, __n, (struct FILE *) __stream);
    }
  return __fgets_chk ((char *) __s, sz, __n, (struct FILE *) __stream);
}


;; Function fread (null)
;; enabled by -tree-original


{
  size_t sz = __builtin_object_size ((const void *) __ptr, 0);

    size_t sz = __builtin_object_size ((const void *) __ptr, 0);
  if (__builtin_constant_p (sz / __size >= __n) != 0 && sz / __size >= __n)
    {
      return __fread_alias ((void *) __ptr, __size, __n, (struct FILE *) __stream);
    }
  if (__builtin_constant_p (sz / __size >= __n) != 0 && sz / __size < __n)
    {
      return __fread_chk_warn ((void *) __ptr, sz, __size, __n, (struct FILE *) __stream);
    }
  return __fread_chk ((void *) __ptr, sz, __size, __n, (struct FILE *) __stream);
}


;; Function fread_unlocked (null)
;; enabled by -tree-original


{
  size_t sz = __builtin_object_size ((const void *) __ptr, 0);

    size_t sz = __builtin_object_size ((const void *) __ptr, 0);
  if (__builtin_constant_p (sz / __size >= __n) != 0 && sz / __size >= __n)
    {
      if (((__builtin_constant_p (__size) != 0 && __builtin_constant_p (__n) != 0) && (__size | __n) <= 4294967295) && __size * __n <= 8)
        {
          {
            size_t __cnt = __size * __n;
            char * __cptr = (char *) __ptr;

                        size_t __cnt = __size * __n;
                        char * __cptr = (char *) __ptr;
            if (__cnt == 0)
              {
                return 0;
              }
            goto <D.2558>;
            <D.2557>:;
            {
              int __c = getc_unlocked ((struct FILE *) __stream);

                            int __c = getc_unlocked ((struct FILE *) __stream);
              if (__c == -1)
                {
                  goto <D.2555>;
                }
              *__cptr++  = (char) __c;
            }
             --__cnt;
            <D.2558>:;
            if (__cnt != 0) goto <D.2557>; else goto <D.2555>;
            <D.2555>:;
            return (size_t) ((long unsigned int) (__cptr - (char *) __ptr) / (long unsigned int) __size);
          }
        }
      return __fread_unlocked_alias ((void *) __ptr, __size, __n, (struct FILE *) __stream);
    }
  if (__builtin_constant_p (sz / __size >= __n) != 0 && sz / __size < __n)
    {
      return __fread_unlocked_chk_warn ((void *) __ptr, sz, __size, __n, (struct FILE *) __stream);
    }
  return __fread_unlocked_chk ((void *) __ptr, sz, __size, __n, (struct FILE *) __stream);
}


;; Function atoi (null)
;; enabled by -tree-original


{
  return (int) strtol (__nptr, 0B, 10);
}


;; Function atol (null)
;; enabled by -tree-original


{
  return strtol (__nptr, 0B, 10);
}


;; Function atoll (null)
;; enabled by -tree-original


{
  return strtoll (__nptr, 0B, 10);
}


;; Function __bswap_16 (null)
;; enabled by -tree-original


{
  return (__uint16_t) __builtin_bswap16 ((int) __bsx);
}


;; Function __bswap_32 (null)
;; enabled by -tree-original


{
  return (__uint32_t) __builtin_bswap32 (__bsx);
}


;; Function __bswap_64 (null)
;; enabled by -tree-original


{
  return (__uint64_t) __builtin_bswap64 (__bsx);
}


;; Function __uint16_identity (null)
;; enabled by -tree-original


{
  return __x;
}


;; Function __uint32_identity (null)
;; enabled by -tree-original


{
  return __x;
}


;; Function __uint64_identity (null)
;; enabled by -tree-original


{
  return __x;
}


;; Function bsearch (null)
;; enabled by -tree-original


{
  size_t __l;
  size_t __u;
  size_t __idx;
  const void * __p;
  int __comparison;

    size_t __l;
    size_t __u;
    size_t __idx;
    const void * __p;
    int __comparison;
  __l = 0;
  __u = __nmemb;
  goto <D.3001>;
  <D.3002>:;
  __idx = (__l + __u) / 2;
  __p = __base + (sizetype) (__idx * __size);
  __comparison = __compar (__key, __p);
  if (__comparison < 0)
    {
      __u = __idx;
    }
  else
    {
      if (__comparison > 0)
        {
          __l = __idx + 1;
        }
      else
        {
          return (void *) __p;
        }
    }
  <D.3001>:;
  if (__l < __u) goto <D.3002>; else goto <D.3000>;
  <D.3000>:;
  return 0B;
}


;; Function atof (null)
;; enabled by -tree-original


{
  return strtod (__nptr, 0B);
}


;; Function realpath (null)
;; enabled by -tree-original


{
  size_t sz = __builtin_object_size ((const void *) __resolved, 1);

    size_t sz = __builtin_object_size ((const void *) __resolved, 1);
  if (sz == 18446744073709551615)
    {
      return __realpath_alias ((const char *) __name, (char *) __resolved);
    }
  return __realpath_chk ((const char *) __name, (char *) __resolved, sz);
}


;; Function ptsname_r (null)
;; enabled by -tree-original


{
  return __builtin_constant_p (__builtin_object_size ((const void *) __buf, 1) >= (long unsigned int) __buflen) != 0 && __builtin_object_size ((const void *) __buf, 1) >= (long unsigned int) __buflen ? __ptsname_r_alias (__fd, __buf, __buflen) : __builtin_constant_p (__builtin_object_size ((const void *) __buf, 1) >= (long unsigned int) __buflen) != 0 && __builtin_object_size ((const void *) __buf, 1) < (long unsigned int) __buflen ? __ptsname_r_chk_warn (__fd, __buf, __buflen, __builtin_object_size ((const void *) __buf, 1)) : __ptsname_r_chk (__fd, __buf, __buflen, __builtin_object_size ((const void *) __buf, 1));
}


;; Function wctomb (null)
;; enabled by -tree-original


{
  if (__builtin_object_size ((const void *) __s, 1) <= 15)
    {
      return __wctomb_chk (__s, __wchar, __builtin_object_size ((const void *) __s, 1));
    }
  return __wctomb_alias (__s, __wchar);
}


;; Function mbstowcs (null)
;; enabled by -tree-original


{
  return __builtin_constant_p (__builtin_object_size ((const void *) __dst, 1) / 4 >= (long unsigned int) __len) != 0 && __builtin_object_size ((const void *) __dst, 1) / 4 >= (long unsigned int) __len ? __mbstowcs_alias ((wchar_t *) __dst, (const char *) __src, __len) : __builtin_constant_p (__builtin_object_size ((const void *) __dst, 1) / 4 >= (long unsigned int) __len) != 0 && __builtin_object_size ((const void *) __dst, 1) / 4 < (long unsigned int) __len ? __mbstowcs_chk_warn ((wchar_t *) __dst, (const char *) __src, __len, __builtin_object_size ((const void *) __dst, 1) / 4) : __mbstowcs_chk ((wchar_t *) __dst, (const char *) __src, __len, __builtin_object_size ((const void *) __dst, 1) / 4);
}


;; Function wcstombs (null)
;; enabled by -tree-original


{
  return __builtin_constant_p (__builtin_object_size ((const void *) __dst, 1) >= (long unsigned int) __len) != 0 && __builtin_object_size ((const void *) __dst, 1) >= (long unsigned int) __len ? __wcstombs_alias ((char *) __dst, (const wchar_t *) __src, __len) : __builtin_constant_p (__builtin_object_size ((const void *) __dst, 1) >= (long unsigned int) __len) != 0 && __builtin_object_size ((const void *) __dst, 1) < (long unsigned int) __len ? __wcstombs_chk_warn ((char *) __dst, (const wchar_t *) __src, __len, __builtin_object_size ((const void *) __dst, 1)) : __wcstombs_chk ((char *) __dst, (const wchar_t *) __src, __len, __builtin_object_size ((const void *) __dst, 1));
}


;; Function main (null)
;; enabled by -tree-original


static const char __PRETTY_FUNCTION__[5] = "main";
{
  unsigned int x;
  unsigned int y;
  int res;
  static const char __PRETTY_FUNCTION__[5] = "main";

    unsigned int x;
    unsigned int y;
    int res;
  res = scanf ((const char * restrict) "%u%u", &x, &y);
  {
    if (res == 2)
      {
        (void) 0;
      }
    else
      {
        __assert_fail ((const char *) "res==2", (const char *) "ns.c", 13, (const char *) &__PRETTY_FUNCTION__);
      }
  }
  print_conv (x, y);
  return 0;
}
return 0;


;; Function print_conv (null)
;; enabled by -tree-original


{
  unsigned int num[32] = {0};
  int k = 0;

    unsigned int num[32] = {0};
    int k = 0;
  goto <D.3209>;
  <D.3210>:;
  num[k] = x % y;
  x = x / y;
  k++ ;
  <D.3209>:;
  if (x != 0) goto <D.3210>; else goto <D.3208>;
  <D.3208>:;
  k-- ;
  goto <D.3212>;
  <D.3213>:;
  printf ((const char * restrict) "%u", num[k-- ]);
  <D.3212>:;
  if (k >= 0) goto <D.3213>; else goto <D.3211>;
  <D.3211>:;
}

