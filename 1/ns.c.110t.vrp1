
;; Function print_conv (print_conv, funcdef_no=40, decl_uid=3195, cgraph_uid=41, symbol_order=40)

;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;;
;; Loop 2
;;  header 7, latch 6
;;  depth 1, outer 0
;;  nodes: 7 6
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 6 8 }
;; 8 succs { 1 }

SSA replacement table
N_i -> { O_1 ... O_j } means that N_i replaces O_1, ..., O_j

k_10 -> { k_4 }
Incremental SSA update started at block: 4
Number of blocks in CFG: 9
Number of blocks to update: 3 ( 33%)



SSA replacement table
N_i -> { O_1 ... O_j } means that N_i replaces O_1, ..., O_j

x_20 -> { x_3 }
k_21 -> { k_5 }
Incremental SSA update started at block: 4
Number of blocks in CFG: 9
Number of blocks to update: 4 ( 44%)



Value ranges after VRP:

_1: unsigned int [0, 4294967294]
_2: unsigned int VARYING
x_3: unsigned int VARYING
k_4: int [0, 32]
k_5: int [-1, 31]
.MEM_6: <<< error >>> VARYING
.MEM_7: <<< error >>> VARYING
k_10: int [0, 32]
x_11(D): unsigned int VARYING
k_12: int [-1, 31]
k_14: int [-1, 30]
y_15(D): unsigned int VARYING
x_17: unsigned int VARYING
k_18: int [1, 33]
x_20: unsigned int [1, +INF]  EQUIVALENCES: { x_3 } (1 elements)
k_21: int [0, 31]  EQUIVALENCES: { k_5 } (1 elements)


void print_conv (unsigned int x, unsigned int y)
{
  int k;
  unsigned int num[32];
  unsigned int _1;
  unsigned int _2;

  <bb 2> [local count: 118111600]:
  num = {};
  goto <bb 4>; [100.00%]

  <bb 3> [local count: 955630225]:
  _1 = x_3 % y_15(D);
  num[k_4] = _1;
  x_17 = x_3 / y_15(D);
  k_18 = k_4 + 1;

  <bb 4> [local count: 1073741824]:
  # x_3 = PHI <x_11(D)(2), x_17(3)>
  # k_4 = PHI <0(2), k_18(3)>
  if (x_3 != 0)
    goto <bb 3>; [89.00%]
  else
    goto <bb 5>; [11.00%]

  <bb 5> [local count: 118111600]:
  # k_10 = PHI <k_4(4)>
  k_12 = k_10 + -1;
  goto <bb 7>; [100.00%]

  <bb 6> [local count: 955630225]:
  k_14 = k_5 + -1;
  _2 = num[k_5];
  __printf_chk (1, "%u", _2);

  <bb 7> [local count: 1073741824]:
  # k_5 = PHI <k_12(5), k_14(6)>
  if (k_5 != -1)
    goto <bb 6>; [89.00%]
  else
    goto <bb 8>; [11.00%]

  <bb 8> [local count: 118111600]:
  num ={v} {CLOBBER};
  return;

}



;; Function main (main, funcdef_no=39, decl_uid=3196, cgraph_uid=40, symbol_order=39) (executed once)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { }
;; 4 succs { 1 }

Value ranges after VRP:

y.0_1: unsigned int VARYING
x.1_2: unsigned int VARYING
res_5: int VARYING


int main ()
{
  static const char __PRETTY_FUNCTION__[5] = "main";
  int res;
  unsigned int y;
  unsigned int x;
  unsigned int y.0_1;
  unsigned int x.1_2;

  <bb 2> [local count: 1073741824]:
  res_5 = scanf ("%u%u", &x, &y);
  if (res_5 == 2)
    goto <bb 4>; [99.96%]
  else
    goto <bb 3>; [0.04%]

  <bb 3> [local count: 429496]:
  __assert_fail ("res==2", "ns.c", 13, &__PRETTY_FUNCTION__);

  <bb 4> [local count: 1073312329]:
  y.0_1 = y;
  x.1_2 = x;
  print_conv (x.1_2, y.0_1);
  x ={v} {CLOBBER};
  y ={v} {CLOBBER};
  return 0;

}


